import React, { useEffect, useState } from "react";
import { FETCH_NUMBER, FETCH_VITAL, FETCH_PATIENTS } from "../gqloperations/queries";
import { useQuery } from "@apollo/client"; // NOT USE lazy QUERY
import { ChatState } from "../context/ChatProvider";
import doc from '../doc.png'


const VitalPage = () => {
  const { vitals, setVitals, selectedChat } = ChatState();

  const { loading, data, refetch } = useQuery(FETCH_VITAL, {
    variables: { emtId: selectedChat },
  });

  useEffect(() => {
    refetch().then((response) => {
      const curr_vitals = response?.data?.fetchVitals;
      if (curr_vitals) {
        setVitals(curr_vitals);
      }

    });

  }, [selectedChat]);

  useEffect(() => {
    const interval = setInterval(() => {
      refetch().then((response) => {
        const curr_vitals = response?.data?.fetchVitals;
        if (curr_vitals) {
          setVitals(curr_vitals);
          console.log(curr_vitals);
        }

      });
    }, 5001);

    return () => clearInterval(interval);
  }, [refetch]);

  if (loading || !vitals) return <p>Loading...</p>;

  return (
    <div className="vital-page">
      <div className="doctor-info">
        {/* <img src={doc} className="doctor-logo" />
         */}
        <svg width="62" height="62" viewBox="0 0 62 62" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M24.5112 2.55058C24.2461 2.55845 23.9402 2.62045 23.5672 2.74954C18.0728 4.65168 9.70866 9.65721 2.29688 11.8993C3.61171 12.7139 5.04437 13.4327 6.52801 14.0027C8.18651 13.2415 9.80638 12.4845 11.1797 11.7251C12.8613 10.7954 14.1601 9.82734 14.7009 9.03697L16.2998 10.131C15.4122 11.4282 13.904 12.4329 12.1172 13.4207C11.2287 13.912 10.2674 14.3906 9.27539 14.8622C10.1854 15.0812 11.0995 15.2364 12.004 15.3111C12.413 15.345 12.8192 15.3631 13.2218 15.3663C15.1406 14.1764 16.9561 12.6405 17.5412 11.536L19.2533 12.4427C18.8338 13.2347 18.2023 13.9959 17.445 14.7066C19.3377 14.0408 21.0524 12.8374 22.4752 10.9402L23.3513 9.77201L24.0871 11.0333C24.6567 12.0098 25.4243 12.8268 26.2952 13.53C26.9409 13.4312 27.5103 13.3636 28.0941 13.3303V9.57692C26.9195 8.69088 26.1566 7.28462 26.1566 5.70907C26.1563 5.07276 26.2826 4.44275 26.5281 3.85573C26.2206 3.42548 25.9033 3.08702 25.5844 2.87826C25.3214 2.70594 25.0607 2.58945 24.7439 2.55821C24.6665 2.55091 24.5888 2.54836 24.5112 2.55058ZM37.3783 2.55058C37.3369 2.55179 37.2964 2.55421 37.2568 2.55821C36.94 2.58945 36.6793 2.70594 36.4162 2.87826C36.0973 3.08702 35.78 3.4256 35.4726 3.85573C35.7181 4.44275 35.8444 5.07276 35.8441 5.70907C35.8441 7.28462 35.0812 8.69088 33.9066 9.57692V13.3303C34.5124 13.3653 35.1725 13.4432 35.7054 13.53C36.5763 12.8268 37.3439 12.0098 37.9136 11.0333L38.6493 9.77201L39.5253 10.9402C40.9482 12.8374 42.663 14.0408 44.5557 14.7066C43.7984 13.9959 43.1667 13.2347 42.7474 12.4427L44.4594 11.536C45.0445 12.6406 46.8601 14.1764 48.7788 15.3662C49.1853 15.3631 49.5916 15.3448 49.9967 15.3112C50.9012 15.2362 51.8153 15.0811 52.7253 14.8622C51.7333 14.3906 50.7719 13.912 49.8833 13.4207C48.0967 12.4329 46.5886 11.4282 45.7009 10.131L47.2998 9.03697C47.8406 9.82734 49.1392 10.7954 50.821 11.7252C52.1942 12.4845 53.8141 13.2413 55.4726 14.0028C56.9563 13.4327 58.389 12.7139 59.7038 11.8993C52.292 9.65721 43.9278 4.6518 38.4334 2.74954C38.0072 2.60192 37.6685 2.54234 37.3783 2.5507V2.55058ZM31.0003 2.90659C29.3837 2.90659 28.0941 4.19624 28.0941 5.81284C28.0941 7.42945 29.3837 8.71909 31.0003 8.71909C32.6169 8.71909 33.9066 7.42945 33.9066 5.81284C33.9066 4.19624 32.6169 2.90659 31.0003 2.90659ZM30.0316 10.4546V13.4384C30.3698 13.5117 30.729 13.6333 31.0003 13.7883C31.325 13.6087 31.6397 13.5139 31.9691 13.4384V10.4546C31.6558 10.5188 31.3318 10.5527 31.0003 10.5527C30.6689 10.5527 30.3449 10.5188 30.0316 10.4546ZM28.5122 15.2565C28.3234 15.2587 28.1346 15.2668 27.9462 15.2807C26.3887 15.3948 24.4585 15.8958 23.6652 16.2718C21.8601 17.1275 21.1043 17.9418 20.7329 18.6923C20.3615 19.4428 20.3441 20.2425 20.3441 21.2091C20.3441 22.3392 20.8647 23.173 21.8149 23.9715C22.7652 24.77 24.1347 25.4417 25.5446 25.9998C28.1472 27.3661 30.8923 28.7779 33.0582 30.3572C33.6534 30.778 34.4124 31.0424 34.9955 31.3475C35.5667 30.747 35.8441 30.1935 35.8441 29.6856C35.8441 29.3829 35.7633 29.0484 35.6148 28.6948C34.1358 25.8998 31.3553 24.5516 28.4325 22.9405L28.4256 22.9481C27.1698 22.4609 26.0021 22.1778 25.1878 22.1778L24.7546 20.3424C26.6718 19.3838 28.0768 18.5801 28.9127 17.8143C29.7308 17.065 30.0347 16.4517 30.0278 15.4758C29.5426 15.2631 28.9916 15.2515 28.5122 15.2565ZM33.4884 15.2565C32.983 15.2735 32.3624 15.2642 31.9728 15.4756C31.9659 16.4517 32.2699 17.065 33.0881 17.8143C33.9239 18.5801 35.3288 19.3838 37.2461 20.3424L36.8128 22.1778C35.8486 22.1778 34.3895 22.5737 32.8743 23.2367C34.0912 24.0155 35.2476 24.923 36.2041 26.0958C36.2882 26.0634 36.372 26.0331 36.4562 25.9998C37.866 25.4417 39.2353 24.77 40.1858 23.9715C41.1359 23.173 41.6566 22.3391 41.6566 21.2091C41.6566 20.2425 41.6391 19.4428 41.2679 18.6923C40.8964 17.9418 40.1406 17.1275 38.3355 16.2718C37.5423 15.8958 35.6119 15.3948 34.0544 15.2807C33.8661 15.2668 33.6773 15.2587 33.4884 15.2565ZM31.0003 18.3787C30.7694 18.6916 30.5085 18.9811 30.2212 19.2431C30.1597 19.2995 30.0959 19.3552 30.0316 19.4106V21.4873C30.3592 21.6365 30.6825 21.7948 31.0013 21.962C31.3195 21.7951 31.6422 21.6368 31.9691 21.4873V19.4106C31.905 19.3557 31.8418 19.2999 31.7794 19.2431C31.4922 18.9811 31.2312 18.6916 31.0003 18.3787ZM26.4548 28.538C26.2618 28.9497 26.1566 29.3385 26.1566 29.6856C26.1566 30.2709 26.5235 30.9165 27.2854 31.6249C28.0473 32.3333 29.1464 33.0376 30.2747 33.6908C31.4031 34.3441 32.5552 34.9478 33.4803 35.5483C33.9429 35.8486 34.3509 36.144 34.6907 36.494C35.0305 36.844 35.3597 37.2943 35.3597 37.92C35.3597 38.4347 35.0992 38.9238 34.7914 39.2283C34.4835 39.533 34.1427 39.7203 33.7895 39.8903C33.5118 40.024 33.2191 40.1451 32.9224 40.2655C33.7166 40.8491 34.4476 41.4828 35.0376 42.11C35.367 41.959 35.6997 41.8076 36.0283 41.649C36.8737 41.2409 37.6708 40.7861 38.1995 40.2876C38.7283 39.7893 38.9925 39.3225 38.9925 38.6466C38.9925 37.4423 38.5568 36.534 37.8317 35.7044C37.1066 34.8746 36.0768 34.165 35.0026 33.5554C33.9285 32.9457 32.8235 32.4398 31.9222 31.9282C31.4716 31.6724 31.0691 31.4203 30.7224 31.095C30.7047 31.0783 30.6873 31.0598 30.6697 31.0425C29.4003 30.19 27.7637 29.1944 26.4548 28.538ZM26.7462 33.7023C25.7645 34.2786 24.837 34.9399 24.1689 35.7044C23.4438 36.5338 23.0081 37.4423 23.0081 38.6466C23.0081 39.3226 23.2724 39.7893 23.8012 40.2876C24.3299 40.7861 25.1269 41.2409 25.9724 41.6491C26.2921 41.8034 26.6142 41.951 26.9339 42.0981C29.2408 43.2832 31.378 44.4118 33.4711 44.9817C33.9596 44.8154 34.0582 44.3601 33.9478 43.8036C32.1488 41.9941 30.3382 40.9212 28.2112 39.8903C27.8579 39.7203 27.5172 39.533 27.2092 39.2283C26.9014 38.9238 26.641 38.4347 26.641 37.92C26.641 37.2943 26.9703 36.8441 27.31 36.494C27.6498 36.144 28.0576 35.8486 28.5203 35.5483C28.695 35.4356 28.8716 35.3257 29.0499 35.2188C28.2591 34.755 27.4645 34.258 26.7462 33.7023ZM31.0003 36.3282C30.6552 36.5238 30.327 36.7121 30.0316 36.8901V38.5372C30.1224 38.5791 30.2137 38.6237 30.305 38.6682C30.5284 38.7603 30.7591 38.8569 31.0001 38.9663C31.3404 38.812 31.6686 38.677 31.9691 38.556V36.8902C31.6488 36.6985 31.3258 36.5111 31.0003 36.3282ZM28.8455 45.2669C28.9167 45.7809 29.156 46.2502 29.5507 46.7378C30.027 47.326 30.7217 47.8991 31.4547 48.4403C32.1877 48.9814 32.952 49.4866 33.5911 50.0346C34.2301 50.5824 34.8753 51.2201 34.8753 52.2091C34.8753 53.4079 34.1706 54.3808 33.3049 55.4786C32.4393 56.5763 31.325 57.7232 30.2158 58.7812C29.9679 59.0177 29.7331 59.2252 29.4886 59.4508C30.4852 58.9289 31.5193 58.2965 32.4937 57.5878C35.2058 55.6151 37.2972 53.0279 37.2972 51.2403C37.2972 50.6994 37.095 50.2664 36.6939 49.7924C36.2929 49.3183 35.6925 48.8513 35.048 48.4022C34.4035 47.953 33.7224 47.5263 33.1393 47.0257C33.0709 46.9667 33.0036 46.9064 32.9376 46.8447C31.3649 46.4266 30.0443 45.8687 28.8455 45.2669ZM27.8921 47.7592C27.5804 47.9755 27.2624 48.1863 26.9527 48.4022C26.3083 48.8513 25.7078 49.3183 25.3067 49.7924C24.9058 50.2664 24.7035 50.6994 24.7035 51.2403C24.7035 52.126 25.1835 53.2192 26.0738 54.3415C26.8471 55.3163 27.9065 56.297 29.0801 57.1849C29.2869 56.986 29.4918 56.7851 29.6948 56.5824C29.3562 56.2157 29.0341 55.8494 28.7417 55.4885C27.8523 54.3911 27.1253 53.4221 27.1253 52.2091C27.1253 51.2201 27.7705 50.5824 28.4095 50.0346C28.7104 49.7767 29.0404 49.5283 29.3805 49.281C28.906 48.8865 28.4459 48.452 28.0452 47.957C27.9929 47.8921 27.9418 47.8261 27.8921 47.7592ZM30.9996 50.5039C30.6489 50.7559 30.3142 50.9969 30.0316 51.215V53.9906C30.1014 54.0848 30.1731 54.1775 30.2468 54.2688C30.4829 54.5602 30.7472 54.8632 31.0299 55.1717C31.3011 54.8667 31.5565 54.5669 31.7837 54.2787C31.8486 54.1963 31.9096 54.1148 31.9691 54.0337V51.215C31.685 50.9958 31.3527 50.7575 30.9996 50.5039Z" fill="#6F6B6B" />
        </svg>

        <div className="doctor-text">
          <h1>Dr. Mohammad Shafi</h1>
          <p>MBBS, MD (Haematology), (Thalassemia, Anemia, Lymphoma, Blood Cancer, Jaundice, blood related diseases)</p>
          <p>Mobile: 01841-122215, Visiting Time: 6 pm to 8 pm (Except Friday & Govt Holiday)</p>
        </div>
      </div>
      <div className="case-sheet">
        <div className="headingg">
          <h3>
            CASE SHEET
            <div className="datee">
              Date: DD/MM/YYYY
            </div>
          </h3>
        </div>
        <form>
          <div className="form-section">
            <div className="form-row">
              <label>
                Patient's name:
                <input type="text" value={vitals.name} readOnly />
              </label>

            </div>
            <div className="form-row">
              <label>
                Sex:
                <input type="text" value={vitals.name} readOnly />
              </label>
            </div>
            <div className="form-row">
              <label>
                Address:
                <input type="text" value={vitals.name} readOnly />
              </label>
            </div>
            <div className="form-row">
              <label>
                Phone:
                <input type="text" value={vitals.name} readOnly />
              </label>
            </div>
            <div className="form-row">
              <label>
                Age:
                <input type="text" value={vitals.name} readOnly />
              </label>
            </div>
            <div className="form-row">
              <label>
                Occupation:
                <input type="text" value={vitals.name} readOnly />
              </label>
            </div>
          </div>
          <div className="form-section2">

            <div className="form-row2">
              <label>
                Chief complaint & duration:
              </label>
              <textarea readOnly>{vitals.treatment}</textarea>
            </div>

            <div className="form-row2">
              <label>
                History of present illness:
              </label>
              <textarea readOnly>{vitals.treatment}</textarea>
            </div>

            <div className="form-row2">
              <label>
                Past medical history:
              </label>
              <textarea readOnly>{vitals.treatment}</textarea>
            </div>

            <div className="form-row2">
              <label>
                Diagnosis:
              </label>
              <textarea readOnly>{vitals.diagnosis}</textarea>
            </div>

            <div className="form-row2">
              <label>
                Treatment:
              </label>
              <textarea readOnly>{vitals.treatment}</textarea>
            </div>
          </div>

          {/* <div className="form-row">
            <label>Vitals:</label>
            <div className="vitals-grid">
              <div>Blood Pressure: {getLatestVital(vitals.blood_pressure_sys)} / {getLatestVital(vitals.blood_pressure_dys)}</div>
              <div>Body Temperature: {getLatestVital(vitals.body_temperature)}</div>
              <div>Pulse Rate: {getLatestVital(vitals.pulse_rate)}</div>
              <div>Spo2: {getLatestVital(vitals.spo2)}</div>
              <div>RBS: {getLatestVital(vitals.rbs)}</div>
            </div>
          </div> */}
          <div className="form-section3">
            <div className="form-row3">
              <label>Vitals:</label>
              <div className="vitals-grid">
                <div className="vital-item">Blood Pressure: {getLatestVital(vitals.blood_pressure_sys)} / {getLatestVital(vitals.blood_pressure_dys)} unit</div>
                <div className="vital-item">Body Temperature: {getLatestVital(vitals.body_temperature)} unit</div>
                <div className="vital-item">Pulse Rate: {getLatestVital(vitals.pulse_rate)} unit</div>
                <div className="vital-item">Spo2: {getLatestVital(vitals.spo2)} unit</div>
                <div className="vital-item">RBS: {getLatestVital(vitals.rbs)} unit</div>
              </div>
            </div>
          </div>

        </form>
      </div>
    </div>
  );
};

// Helper function to get the latest vital sign
function getLatestVital(vitalArray) {
  return vitalArray.length > 0 ? vitalArray[vitalArray.length - 1] : 'N/A';
}

export default VitalPage;
